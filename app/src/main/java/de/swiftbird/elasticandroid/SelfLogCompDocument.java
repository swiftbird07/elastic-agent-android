package de.swiftbird.elasticandroid;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;
import com.google.gson.annotations.SerializedName;

/**
 * Represents a document for self-logging within the Elastic Android application. This document captures internal log messages
 * generated by the application, including operational events, errors, and informational messages.
 *
 * <p>Each log entry is characterized by its level (e.g., INFO, DEBUG, ERROR), a tag that identifies the log's source or category,
 * and the log message itself. These attributes facilitate the organization and retrieval of logs for analysis and debugging purposes.</p>
 *
 * <p>Instances of this class are created and managed by the {@link SelfLogComp}, which collects, stores, and manages access
 * to these log documents. The {@link AppLog} class, in conjunction with {@link SelfLogComp}, is used to add entries to the log,
 * demonstrating a decoupled approach to logging within the application.</p>
 *
 * <p>Note: The {@code eventAction} and {@code eventCategory} fields are preset to "syslog" and "log" respectively.</p>
 */
@Entity
public class SelfLogCompDocument extends ElasticDocument {
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "id")
    public int id;

    @SerializedName("event.action")
    @ColumnInfo(name = "event_action")
    public String eventAction = "syslog";

    @SerializedName("event.category")
    @ColumnInfo(name = "event_category")
    public String eventCategory = "log";

    @SerializedName("log.level")
    @ColumnInfo(name = "log_level")
    public String logLevel;

    @SerializedName("tag")
    @ColumnInfo(name = "tag")
    public String tag;

    @SerializedName("message")
    @ColumnInfo(name = "message")
    public String message;

    // Constructor using superclass constructor and setting own fields
    public SelfLogCompDocument() {}
    public SelfLogCompDocument(FleetEnrollData fleetEnrollData, PolicyData policyData, String logLevel, String tag, String message) {
        super(fleetEnrollData, policyData);
        this.logLevel = logLevel;
        this.tag = tag;
        this.message = message;
    }

}

